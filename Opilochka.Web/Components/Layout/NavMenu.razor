@using Opilochka.Data.Users
@using System.Security.Claims
@using Opilochka.Web.Services.Auth
@rendermode InteractiveServer
@inject AuthenticationStateProvider AuthenticationStateProvider

<nav class="side-bar bg-purple-dark-3 sticky top-0 bottom-0 left-0 h-lvh w-70 flex-none overflow-hidden p-5 text-white">
    <a class="m-2.5 text-3xl font-bold">Opilochka</a>
    <div class="mt-10 font-medium">
        @if (user.IsInRole("Admin"))
        {
            <div class="select-link mt-1 flex gap-2.5 rounded-sm p-2.5">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
                class="bi bi-people" viewBox="0 0 16 16">
                    <path d="M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1zm-7.978-1L7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002-.014.002zM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0M6.936 9.28a6 6 0 0 0-1.23-.247A7 7 0 0 0 5 9c-4 0-5 3-5 4q0 1 1 1h4.216A2.24 2.24 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816M4.92 10A5.5 5.5 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275ZM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0m3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4" />
                </svg>
                <a href="/groups">Группы</a>
            </div>
            <div class="select-link mt-1 flex gap-2.5 rounded-sm p-2.5">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
                class="bi bi-person" viewBox="0 0 16 16">
                    <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
                </svg>
                <a href="/users">Пользователи</a>
            </div>
        }
        else if (user.IsInRole("Teacher"))
        {
            <div class="select-link mt-1 flex gap-2.5 rounded-sm p-2.5">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-highlighter" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M11.096.644a2 2 0 0 1 2.791.036l1.433 1.433a2 2 0 0 1 .035 2.791l-.413.435-8.07 8.995a.5.5 0 0 1-.372.166h-3a.5.5 0 0 1-.234-.058l-.412.412A.5.5 0 0 1 2.5 15h-2a.5.5 0 0 1-.354-.854l1.412-1.412A.5.5 0 0 1 1.5 12.5v-3a.5.5 0 0 1 .166-.372l8.995-8.07zm-.115 1.47L2.727 9.52l3.753 3.753 7.406-8.254zm3.585 2.17.064-.068a1 1 0 0 0-.017-1.396L13.18 1.387a1 1 0 0 0-1.396-.018l-.068.065zM5.293 13.5 2.5 10.707v1.586L3.707 13.5z" />
                </svg>
                <a href="/lessons">Уроки</a>
            </div>
            <div class="select-link mt-1 flex gap-2.5 rounded-sm p-2.5">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list-task" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M2 2.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5zM3 3H2v1h1z" />
                    <path d="M5 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M5.5 7a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1zm0 4a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1z" />
                    <path fill-rule="evenodd" d="M1.5 7a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5zM2 7h1v1H2zm0 3.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5zm1 .5H2v1h1z" />
                </svg>
                <a href="/tasks">Задания</a>
            </div>
        }
        else
        {
            <div class="select-link mt-1 flex gap-2.5 rounded-sm p-2.5">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell" viewBox="0 0 16 16">
                    <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2M8 1.918l-.797.161A4 4 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4 4 0 0 0-3.203-3.92zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5 5 0 0 1 13 6c0 .88.32 4.2 1.22 6" />
                </svg>
                <a href="/active-task">Активные задания</a>
            </div>
            <div class="select-link mt-1 flex gap-2.5 rounded-sm p-2.5">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock-history" viewBox="0 0 16 16">
                    <path d="M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022zm2.004.45a7 7 0 0 0-.985-.299l.219-.976q.576.129 1.126.342zm1.37.71a7 7 0 0 0-.439-.27l.493-.87a8 8 0 0 1 .979.654l-.615.789a7 7 0 0 0-.418-.302zm1.834 1.79a7 7 0 0 0-.653-.796l.724-.69q.406.429.747.91zm.744 1.352a7 7 0 0 0-.214-.468l.893-.45a8 8 0 0 1 .45 1.088l-.95.313a7 7 0 0 0-.179-.483m.53 2.507a7 7 0 0 0-.1-1.025l.985-.17q.1.58.116 1.17zm-.131 1.538q.05-.254.081-.51l.993.123a8 8 0 0 1-.23 1.155l-.964-.267q.069-.247.12-.501m-.952 2.379q.276-.436.486-.908l.914.405q-.24.54-.555 1.038zm-.964 1.205q.183-.183.35-.378l.758.653a8 8 0 0 1-.401.432z" />
                    <path d="M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0z" />
                    <path d="M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5" />
                </svg>
                <a href="/verified-task">Выполненные задания</a>
            </div>
        }
    </div>
    <div class="absolute bottom-1 font-medium">
        <div @onclick="Logout"
        id="logoutButton"
        class="logout-button select-link mt-1 flex cursor-pointer items-center gap-2.5 rounded-sm p-2.5">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="white"
            class="bi bi-box-arrow-right size-16" viewBox="-3 -2 20 20">
                <path fill-rule="evenodd"
                d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0z" />
                <path fill-rule="evenodd"
                d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z" />
            </svg>
            <div>Выход</div>
        </div>
        <div onclick="userInfoClick()" class="select-link mt-1 flex cursor-pointer items-center gap-2.5 rounded-sm p-2.5">
            <img class="bg-purple-light-4 size-12 rounded-3xl" src="/img/profileIcon.png" alt="">
            @if (!string.IsNullOrEmpty(FullName))
            {
                <div>@FullName</div>
            }
        </div>
    </div>
</nav>

<style>
    .logout-button {
    visibility: hidden;
    }
</style>

<script>
    function userInfoClick(){
    let logout_button = document.getElementById('logoutButton');
    if(logout_button.classList.contains('logout-button')){
    logout_button.classList.remove('logout-button')
    }
    else{
    logout_button.classList.add('logout-button')
    }
    }
</script>

@code {
    [Inject] public AuthService AuthService { get; set; } = default!;
    private string FirstName { get; set; } = string.Empty;
    private string SecondName { get; set; } = string.Empty;
    private ClaimsPrincipal user = new();

    private string FullName => $"{FirstName} {SecondName}".Trim();

    protected override async Task OnInitializedAsync()
    {
        await LoadUserInfoAsync();
    }

    private async Task LoadUserInfoAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            FirstName = user.FindFirst("FirstName")?.Value ?? string.Empty;
            SecondName = user.FindFirst("SecondName")?.Value ?? string.Empty;
        }
        Console.WriteLine("ФИО" + FullName);
    }

    private async Task Logout()
    {
        try
        {
            await AuthService.Logout();
        }
        catch (Exception ex)
        {
            // Обработка ошибок
        }
    }
}


